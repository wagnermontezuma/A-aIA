import asyncio
import os
from dotenv import load_dotenv
from projeto_agentes_ia.agents.langchain_agent_with_memory import LangChainAgentWithMemory

async def test_langchain_memory():
    """Testa especificamente a mem√≥ria do agente LangChain."""
    load_dotenv()

    if not os.getenv("OPENAI_API_KEY"):
        print("‚ùå OPENAI_API_KEY n√£o configurada")
        return

    print("=== Teste de Mem√≥ria do LangChain ===\n")

    try:
        # Inicializar o agente
        agent = LangChainAgentWithMemory()

        # Definir contexto do usu√°rio
        user_id = "test_memory_user"
        session_id = "langchain_memory_test"
        agent.set_user_context(user_id, session_id)

        # Sequ√™ncia de perguntas para testar mem√≥ria
        test_sequence = [
            "Meu nome √© Jo√£o e eu trabalho como engenheiro de software.",
            "Eu gosto muito de Python e estou aprendendo sobre IA.",
            "Qual √© o meu nome?",
            "Qual √© a minha profiss√£o?",
            "Qual linguagem de programa√ß√£o eu gosto?",
            "Sobre o que estou aprendendo?",
            "Voc√™ pode me fazer um resumo do que sabe sobre mim?"
        ]

        for i, query in enumerate(test_sequence, 1):
            print(f"--- Pergunta {i} ---")
            print(f"üë§ Usu√°rio: {query}")

            try:
                response = await agent._run_async(query)
                print(f"ü§ñ LangChain: {response}")

                # Verificar se h√° ind√≠cios de mem√≥ria nas respostas
                if i > 2:  # A partir da terceira pergunta
                    keywords = ["jo√£o", "engenheiro", "python", "ia", "intelig√™ncia"]
                    if any(keyword in response.lower() for keyword in keywords):
                        print("‚úÖ Mem√≥ria detectada na resposta!")
                    else:
                        print("‚ö†Ô∏è  Mem√≥ria n√£o detectada claramente")

                print()

            except Exception as e:
                print(f"‚ùå Erro: {e}\n")

            await asyncio.sleep(1)  # Pausa entre perguntas

        print("=== Teste de Mem√≥ria Conclu√≠do ===")

    except Exception as e:
        print(f"‚ùå Erro na inicializa√ß√£o: {e}")

if __name__ == "__main__":
    asyncio.run(test_langchain_memory())